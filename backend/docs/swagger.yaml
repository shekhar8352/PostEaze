basePath: /
definitions:
  modelsv1.ErrorResponse:
    properties:
      msg:
        type: string
      status:
        type: string
    type: object
  modelsv1.LoginParams:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  modelsv1.RefreshTokenParams:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  modelsv1.SignupParams:
    properties:
      email:
        type: string
      name:
        minLength: 2
        type: string
      password:
        minLength: 8
        type: string
      team_name:
        type: string
      user_type:
        allOf:
        - $ref: '#/definitions/modelsv1.UserType'
        enum:
        - individual
        - team
    required:
    - email
    - name
    - password
    - user_type
    type: object
  modelsv1.SuccessResponse:
    properties:
      data: {}
      msg:
        type: string
      status:
        type: string
    type: object
  modelsv1.UserType:
    enum:
    - individual
    - team
    type: string
    x-enum-varnames:
    - UserTypeIndividual
    - UserTypeTeam
host: localhost:8000
info:
  contact: {}
  description: Auto-generated API documentation with Swagger
  title: PostEaze API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return tokens
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/modelsv1.LoginParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelsv1.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/modelsv1.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/modelsv1.ErrorResponse'
      summary: User Login
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Invalidate user session and token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelsv1.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/modelsv1.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: User Logout
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Generate new access token using refresh token
      parameters:
      - description: Refresh Token Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/modelsv1.RefreshTokenParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelsv1.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/modelsv1.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/modelsv1.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Refresh Token
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: Signup Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/modelsv1.SignupParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelsv1.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/modelsv1.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/modelsv1.ErrorResponse'
      summary: User Signup
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
